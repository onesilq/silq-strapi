# Production values for Strapi deployment
# Use with: helm install strapi ./helm/strapi -f helm/strapi/values-production.yaml

replicaCount: 3

image:
  repository: my-strapi-project
  pullPolicy: IfNotPresent
  tag: "latest"

# Production resource limits
resources:
  limits:
    cpu: 1000m
    memory: 1Gi
  requests:
    cpu: 500m
    memory: 512Mi

# Enable autoscaling
autoscaling:
  enabled: true
  minReplicas: 2
  maxReplicas: 10
  targetCPUUtilizationPercentage: 70

# Production database configuration
database:
  type: "postgres"
  host: "postgresql-postgresql"
  port: 5432
  name: "strapi"
  username: "strapi"
  password: "CHANGE_ME_IN_PRODUCTION"
  ssl: true

# Production environment variables
env:
  NODE_ENV: "production"
  HOST: "0.0.0.0"
  PORT: "1337"
  APP_KEYS: "CHANGE_ME_1,CHANGE_ME_2"
  API_TOKEN_SALT: "CHANGE_ME"
  ADMIN_JWT_SECRET: "CHANGE_ME"
  TRANSFER_TOKEN_SALT: "CHANGE_ME"
  JWT_SECRET: "CHANGE_ME"

# Production ingress with TLS
ingress:
  enabled: true
  className: "nginx"
  annotations:
    nginx.ingress.kubernetes.io/rewrite-target: /
    cert-manager.io/cluster-issuer: "letsencrypt-prod"
  hosts:
    - host: strapi.yourdomain.com
      paths:
        - path: /
          pathType: Prefix
  tls:
    - secretName: strapi-tls
      hosts:
        - strapi.yourdomain.com

# Production persistence
persistence:
  enabled: true
  storageClass: "fast-ssd"
  accessMode: ReadWriteOnce
  size: 50Gi

# Production PostgreSQL
postgresql:
  enabled: true
  auth:
    postgresPassword: "CHANGE_ME_POSTGRES"
    username: "strapi"
    password: "CHANGE_ME_STRAPI"
    database: "strapi"
  primary:
    persistence:
      enabled: true
      size: 100Gi
      storageClass: "fast-ssd"
    resources:
      limits:
        cpu: 1000m
        memory: 1Gi
      requests:
        cpu: 500m
        memory: 512Mi
